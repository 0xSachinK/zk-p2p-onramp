pragma circom 2.0.3;

include "./regex_helpers.circom";

template DKIMHeaderRegex (msg_bytes) {
    signal input msg[msg_bytes];
    signal output out;

    var num_bytes = msg_bytes+1;
    signal in[num_bytes];
    in[0] <== 128;      // \x80 (sentinel for first character in string)
    for (var i = 0; i < msg_bytes; i++) {
        in[i+1] <== msg[i];
    }

    component eq[63][num_bytes];
	component lt[27][num_bytes];
	component and[35][num_bytes];
	component multi_or[23][num_bytes];
	signal states[num_bytes+1][20];
	
	for (var i = 0; i < num_bytes; i++) {
		states[i][0] <== 1;
	}
	for (var i = 1; i < 20; i++) {
		states[0][i] <== 0;
	}
	
	for (var i = 0; i < num_bytes; i++) {
		lt[0][i] = LessThan(8);
		lt[0][i].in[0] <== in[i] - 65 - 10944121435919637611123202872628637544274182200208017171849102093287904247808;
		lt[0][i].in[1] <== 27;
		lt[1][i] = LessThan(8);
		lt[1][i].in[0] <== in[i] - 97 - 10944121435919637611123202872628637544274182200208017171849102093287904247808;
		lt[1][i].in[1] <== 27;
		lt[2][i] = LessThan(8);
		lt[2][i].in[0] <== in[i] - 48 - 10944121435919637611123202872628637544274182200208017171849102093287904247808;
		lt[2][i].in[1] <== 11;
		eq[0][i] = IsEqual();
		eq[0][i].in[0] <== in[i];
		eq[0][i].in[1] <== 46;
		eq[1][i] = IsEqual();
		eq[1][i].in[0] <== in[i];
		eq[1][i].in[1] <== 95;
		eq[2][i] = IsEqual();
		eq[2][i].in[0] <== in[i];
		eq[2][i].in[1] <== 45;
		and[0][i] = AND();
		and[0][i].a <== states[i][1];
		multi_or[0][i] = MultiOR(6);
		multi_or[0][i].in[0] <== lt[0][i].out;
		multi_or[0][i].in[1] <== lt[1][i].out;
		multi_or[0][i].in[2] <== lt[2][i].out;
		multi_or[0][i].in[3] <== eq[0][i].out;
		multi_or[0][i].in[4] <== eq[1][i].out;
		multi_or[0][i].in[5] <== eq[2][i].out;
		and[0][i].b <== multi_or[0][i].out;
		lt[3][i] = LessThan(8);
		lt[3][i].in[0] <== in[i] - 65 - 10944121435919637611123202872628637544274182200208017171849102093287904247808;
		lt[3][i].in[1] <== 27;
		lt[4][i] = LessThan(8);
		lt[4][i].in[0] <== in[i] - 97 - 10944121435919637611123202872628637544274182200208017171849102093287904247808;
		lt[4][i].in[1] <== 27;
		lt[5][i] = LessThan(8);
		lt[5][i].in[0] <== in[i] - 48 - 10944121435919637611123202872628637544274182200208017171849102093287904247808;
		lt[5][i].in[1] <== 11;
		eq[3][i] = IsEqual();
		eq[3][i].in[0] <== in[i];
		eq[3][i].in[1] <== 46;
		eq[4][i] = IsEqual();
		eq[4][i].in[0] <== in[i];
		eq[4][i].in[1] <== 95;
		eq[5][i] = IsEqual();
		eq[5][i].in[0] <== in[i];
		eq[5][i].in[1] <== 45;
		and[1][i] = AND();
		and[1][i].a <== states[i][13];
		multi_or[1][i] = MultiOR(6);
		multi_or[1][i].in[0] <== lt[3][i].out;
		multi_or[1][i].in[1] <== lt[4][i].out;
		multi_or[1][i].in[2] <== lt[5][i].out;
		multi_or[1][i].in[3] <== eq[3][i].out;
		multi_or[1][i].in[4] <== eq[4][i].out;
		multi_or[1][i].in[5] <== eq[5][i].out;
		and[1][i].b <== multi_or[1][i].out;
		multi_or[2][i] = MultiOR(2);
		multi_or[2][i].in[0] <== and[0][i].out;
		multi_or[2][i].in[1] <== and[1][i].out;
		states[i+1][1] <== multi_or[2][i].out;
		eq[6][i] = IsEqual();
		eq[6][i].in[0] <== in[i];
		eq[6][i].in[1] <== 13;
		and[2][i] = AND();
		and[2][i].a <== states[i][0];
		and[2][i].b <== eq[6][i].out;
		states[i+1][2] <== and[2][i].out;
		eq[7][i] = IsEqual();
		eq[7][i].in[0] <== in[i];
		eq[7][i].in[1] <== 128;
		and[3][i] = AND();
		and[3][i].a <== states[i][0];
		and[3][i].b <== eq[7][i].out;
		eq[8][i] = IsEqual();
		eq[8][i].in[0] <== in[i];
		eq[8][i].in[1] <== 10;
		and[4][i] = AND();
		and[4][i].a <== states[i][2];
		and[4][i].b <== eq[8][i].out;
		multi_or[3][i] = MultiOR(2);
		multi_or[3][i].in[0] <== and[3][i].out;
		multi_or[3][i].in[1] <== and[4][i].out;
		states[i+1][3] <== multi_or[3][i].out;
		eq[9][i] = IsEqual();
		eq[9][i].in[0] <== in[i];
		eq[9][i].in[1] <== 34;
		eq[10][i] = IsEqual();
		eq[10][i].in[0] <== in[i];
		eq[10][i].in[1] <== 32;
		and[5][i] = AND();
		and[5][i].a <== states[i][1];
		multi_or[4][i] = MultiOR(2);
		multi_or[4][i].in[0] <== eq[9][i].out;
		multi_or[4][i].in[1] <== eq[10][i].out;
		and[5][i].b <== multi_or[4][i].out;
		lt[6][i] = LessThan(8);
		lt[6][i].in[0] <== in[i] - 65 - 10944121435919637611123202872628637544274182200208017171849102093287904247808;
		lt[6][i].in[1] <== 27;
		lt[7][i] = LessThan(8);
		lt[7][i].in[0] <== in[i] - 97 - 10944121435919637611123202872628637544274182200208017171849102093287904247808;
		lt[7][i].in[1] <== 27;
		lt[8][i] = LessThan(8);
		lt[8][i].in[0] <== in[i] - 48 - 10944121435919637611123202872628637544274182200208017171849102093287904247808;
		lt[8][i].in[1] <== 11;
		eq[11][i] = IsEqual();
		eq[11][i].in[0] <== in[i];
		eq[11][i].in[1] <== 46;
		eq[12][i] = IsEqual();
		eq[12][i].in[0] <== in[i];
		eq[12][i].in[1] <== 64;
		eq[13][i] = IsEqual();
		eq[13][i].in[0] <== in[i];
		eq[13][i].in[1] <== 34;
		eq[14][i] = IsEqual();
		eq[14][i].in[0] <== in[i];
		eq[14][i].in[1] <== 45;
		eq[15][i] = IsEqual();
		eq[15][i].in[0] <== in[i];
		eq[15][i].in[1] <== 32;
		eq[16][i] = IsEqual();
		eq[16][i].in[0] <== in[i];
		eq[16][i].in[1] <== 95;
		and[6][i] = AND();
		and[6][i].a <== states[i][4];
		multi_or[5][i] = MultiOR(9);
		multi_or[5][i].in[0] <== lt[6][i].out;
		multi_or[5][i].in[1] <== lt[7][i].out;
		multi_or[5][i].in[2] <== lt[8][i].out;
		multi_or[5][i].in[3] <== eq[11][i].out;
		multi_or[5][i].in[4] <== eq[12][i].out;
		multi_or[5][i].in[5] <== eq[13][i].out;
		multi_or[5][i].in[6] <== eq[14][i].out;
		multi_or[5][i].in[7] <== eq[15][i].out;
		multi_or[5][i].in[8] <== eq[16][i].out;
		and[6][i].b <== multi_or[5][i].out;
		eq[17][i] = IsEqual();
		eq[17][i].in[0] <== in[i];
		eq[17][i].in[1] <== 34;
		eq[18][i] = IsEqual();
		eq[18][i].in[0] <== in[i];
		eq[18][i].in[1] <== 64;
		eq[19][i] = IsEqual();
		eq[19][i].in[0] <== in[i];
		eq[19][i].in[1] <== 32;
		and[7][i] = AND();
		and[7][i].a <== states[i][8];
		multi_or[6][i] = MultiOR(3);
		multi_or[6][i].in[0] <== eq[17][i].out;
		multi_or[6][i].in[1] <== eq[18][i].out;
		multi_or[6][i].in[2] <== eq[19][i].out;
		and[7][i].b <== multi_or[6][i].out;
		eq[20][i] = IsEqual();
		eq[20][i].in[0] <== in[i];
		eq[20][i].in[1] <== 34;
		eq[21][i] = IsEqual();
		eq[21][i].in[0] <== in[i];
		eq[21][i].in[1] <== 64;
		eq[22][i] = IsEqual();
		eq[22][i].in[0] <== in[i];
		eq[22][i].in[1] <== 32;
		and[8][i] = AND();
		and[8][i].a <== states[i][13];
		multi_or[7][i] = MultiOR(3);
		multi_or[7][i].in[0] <== eq[20][i].out;
		multi_or[7][i].in[1] <== eq[21][i].out;
		multi_or[7][i].in[2] <== eq[22][i].out;
		and[8][i].b <== multi_or[7][i].out;
		eq[23][i] = IsEqual();
		eq[23][i].in[0] <== in[i];
		eq[23][i].in[1] <== 34;
		eq[24][i] = IsEqual();
		eq[24][i].in[0] <== in[i];
		eq[24][i].in[1] <== 64;
		eq[25][i] = IsEqual();
		eq[25][i].in[0] <== in[i];
		eq[25][i].in[1] <== 32;
		and[9][i] = AND();
		and[9][i].a <== states[i][14];
		multi_or[8][i] = MultiOR(3);
		multi_or[8][i].in[0] <== eq[23][i].out;
		multi_or[8][i].in[1] <== eq[24][i].out;
		multi_or[8][i].in[2] <== eq[25][i].out;
		and[9][i].b <== multi_or[8][i].out;
		multi_or[9][i] = MultiOR(5);
		multi_or[9][i].in[0] <== and[5][i].out;
		multi_or[9][i].in[1] <== and[6][i].out;
		multi_or[9][i].in[2] <== and[7][i].out;
		multi_or[9][i].in[3] <== and[8][i].out;
		multi_or[9][i].in[4] <== and[9][i].out;
		states[i+1][4] <== multi_or[9][i].out;
		eq[26][i] = IsEqual();
		eq[26][i].in[0] <== in[i];
		eq[26][i].in[1] <== 60;
		and[10][i] = AND();
		and[10][i].a <== states[i][1];
		and[10][i].b <== eq[26][i].out;
		eq[27][i] = IsEqual();
		eq[27][i].in[0] <== in[i];
		eq[27][i].in[1] <== 60;
		and[11][i] = AND();
		and[11][i].a <== states[i][4];
		and[11][i].b <== eq[27][i].out;
		eq[28][i] = IsEqual();
		eq[28][i].in[0] <== in[i];
		eq[28][i].in[1] <== 60;
		and[12][i] = AND();
		and[12][i].a <== states[i][8];
		and[12][i].b <== eq[28][i].out;
		eq[29][i] = IsEqual();
		eq[29][i].in[0] <== in[i];
		eq[29][i].in[1] <== 60;
		and[13][i] = AND();
		and[13][i].a <== states[i][14];
		and[13][i].b <== eq[29][i].out;
		multi_or[10][i] = MultiOR(4);
		multi_or[10][i].in[0] <== and[10][i].out;
		multi_or[10][i].in[1] <== and[11][i].out;
		multi_or[10][i].in[2] <== and[12][i].out;
		multi_or[10][i].in[3] <== and[13][i].out;
		states[i+1][5] <== multi_or[10][i].out;
		eq[30][i] = IsEqual();
		eq[30][i].in[0] <== in[i];
		eq[30][i].in[1] <== 102;
		and[14][i] = AND();
		and[14][i].a <== states[i][3];
		and[14][i].b <== eq[30][i].out;
		states[i+1][6] <== and[14][i].out;
		eq[31][i] = IsEqual();
		eq[31][i].in[0] <== in[i];
		eq[31][i].in[1] <== 116;
		and[15][i] = AND();
		and[15][i].a <== states[i][3];
		and[15][i].b <== eq[31][i].out;
		states[i+1][7] <== and[15][i].out;
		eq[32][i] = IsEqual();
		eq[32][i].in[0] <== in[i];
		eq[32][i].in[1] <== 64;
		and[16][i] = AND();
		and[16][i].a <== states[i][1];
		and[16][i].b <== eq[32][i].out;
		states[i+1][8] <== and[16][i].out;
		eq[33][i] = IsEqual();
		eq[33][i].in[0] <== in[i];
		eq[33][i].in[1] <== 114;
		and[17][i] = AND();
		and[17][i].a <== states[i][6];
		and[17][i].b <== eq[33][i].out;
		states[i+1][9] <== and[17][i].out;
		eq[34][i] = IsEqual();
		eq[34][i].in[0] <== in[i];
		eq[34][i].in[1] <== 111;
		and[18][i] = AND();
		and[18][i].a <== states[i][7];
		and[18][i].b <== eq[34][i].out;
		eq[35][i] = IsEqual();
		eq[35][i].in[0] <== in[i];
		eq[35][i].in[1] <== 109;
		and[19][i] = AND();
		and[19][i].a <== states[i][12];
		and[19][i].b <== eq[35][i].out;
		multi_or[11][i] = MultiOR(2);
		multi_or[11][i].in[0] <== and[18][i].out;
		multi_or[11][i].in[1] <== and[19][i].out;
		states[i+1][10] <== multi_or[11][i].out;
		lt[9][i] = LessThan(8);
		lt[9][i].in[0] <== in[i] - 65 - 10944121435919637611123202872628637544274182200208017171849102093287904247808;
		lt[9][i].in[1] <== 27;
		lt[10][i] = LessThan(8);
		lt[10][i].in[0] <== in[i] - 97 - 10944121435919637611123202872628637544274182200208017171849102093287904247808;
		lt[10][i].in[1] <== 27;
		lt[11][i] = LessThan(8);
		lt[11][i].in[0] <== in[i] - 48 - 10944121435919637611123202872628637544274182200208017171849102093287904247808;
		lt[11][i].in[1] <== 11;
		eq[36][i] = IsEqual();
		eq[36][i].in[0] <== in[i];
		eq[36][i].in[1] <== 46;
		eq[37][i] = IsEqual();
		eq[37][i].in[0] <== in[i];
		eq[37][i].in[1] <== 95;
		eq[38][i] = IsEqual();
		eq[38][i].in[0] <== in[i];
		eq[38][i].in[1] <== 45;
		and[20][i] = AND();
		and[20][i].a <== states[i][5];
		multi_or[12][i] = MultiOR(6);
		multi_or[12][i].in[0] <== lt[9][i].out;
		multi_or[12][i].in[1] <== lt[10][i].out;
		multi_or[12][i].in[2] <== lt[11][i].out;
		multi_or[12][i].in[3] <== eq[36][i].out;
		multi_or[12][i].in[4] <== eq[37][i].out;
		multi_or[12][i].in[5] <== eq[38][i].out;
		and[20][i].b <== multi_or[12][i].out;
		lt[12][i] = LessThan(8);
		lt[12][i].in[0] <== in[i] - 65 - 10944121435919637611123202872628637544274182200208017171849102093287904247808;
		lt[12][i].in[1] <== 27;
		lt[13][i] = LessThan(8);
		lt[13][i].in[0] <== in[i] - 97 - 10944121435919637611123202872628637544274182200208017171849102093287904247808;
		lt[13][i].in[1] <== 27;
		lt[14][i] = LessThan(8);
		lt[14][i].in[0] <== in[i] - 48 - 10944121435919637611123202872628637544274182200208017171849102093287904247808;
		lt[14][i].in[1] <== 11;
		eq[39][i] = IsEqual();
		eq[39][i].in[0] <== in[i];
		eq[39][i].in[1] <== 46;
		eq[40][i] = IsEqual();
		eq[40][i].in[0] <== in[i];
		eq[40][i].in[1] <== 95;
		eq[41][i] = IsEqual();
		eq[41][i].in[0] <== in[i];
		eq[41][i].in[1] <== 45;
		and[21][i] = AND();
		and[21][i].a <== states[i][11];
		multi_or[13][i] = MultiOR(6);
		multi_or[13][i].in[0] <== lt[12][i].out;
		multi_or[13][i].in[1] <== lt[13][i].out;
		multi_or[13][i].in[2] <== lt[14][i].out;
		multi_or[13][i].in[3] <== eq[39][i].out;
		multi_or[13][i].in[4] <== eq[40][i].out;
		multi_or[13][i].in[5] <== eq[41][i].out;
		and[21][i].b <== multi_or[13][i].out;
		multi_or[14][i] = MultiOR(2);
		multi_or[14][i].in[0] <== and[20][i].out;
		multi_or[14][i].in[1] <== and[21][i].out;
		states[i+1][11] <== multi_or[14][i].out;
		eq[42][i] = IsEqual();
		eq[42][i].in[0] <== in[i];
		eq[42][i].in[1] <== 111;
		and[22][i] = AND();
		and[22][i].a <== states[i][9];
		and[22][i].b <== eq[42][i].out;
		states[i+1][12] <== and[22][i].out;
		eq[43][i] = IsEqual();
		eq[43][i].in[0] <== in[i];
		eq[43][i].in[1] <== 58;
		and[23][i] = AND();
		and[23][i].a <== states[i][10];
		and[23][i].b <== eq[43][i].out;
		states[i+1][13] <== and[23][i].out;
		lt[15][i] = LessThan(8);
		lt[15][i].in[0] <== in[i] - 65 - 10944121435919637611123202872628637544274182200208017171849102093287904247808;
		lt[15][i].in[1] <== 27;
		lt[16][i] = LessThan(8);
		lt[16][i].in[0] <== in[i] - 97 - 10944121435919637611123202872628637544274182200208017171849102093287904247808;
		lt[16][i].in[1] <== 27;
		lt[17][i] = LessThan(8);
		lt[17][i].in[0] <== in[i] - 48 - 10944121435919637611123202872628637544274182200208017171849102093287904247808;
		lt[17][i].in[1] <== 11;
		eq[44][i] = IsEqual();
		eq[44][i].in[0] <== in[i];
		eq[44][i].in[1] <== 46;
		eq[45][i] = IsEqual();
		eq[45][i].in[0] <== in[i];
		eq[45][i].in[1] <== 95;
		eq[46][i] = IsEqual();
		eq[46][i].in[0] <== in[i];
		eq[46][i].in[1] <== 45;
		and[24][i] = AND();
		and[24][i].a <== states[i][8];
		multi_or[15][i] = MultiOR(6);
		multi_or[15][i].in[0] <== lt[15][i].out;
		multi_or[15][i].in[1] <== lt[16][i].out;
		multi_or[15][i].in[2] <== lt[17][i].out;
		multi_or[15][i].in[3] <== eq[44][i].out;
		multi_or[15][i].in[4] <== eq[45][i].out;
		multi_or[15][i].in[5] <== eq[46][i].out;
		and[24][i].b <== multi_or[15][i].out;
		lt[18][i] = LessThan(8);
		lt[18][i].in[0] <== in[i] - 65 - 10944121435919637611123202872628637544274182200208017171849102093287904247808;
		lt[18][i].in[1] <== 27;
		lt[19][i] = LessThan(8);
		lt[19][i].in[0] <== in[i] - 97 - 10944121435919637611123202872628637544274182200208017171849102093287904247808;
		lt[19][i].in[1] <== 27;
		lt[20][i] = LessThan(8);
		lt[20][i].in[0] <== in[i] - 48 - 10944121435919637611123202872628637544274182200208017171849102093287904247808;
		lt[20][i].in[1] <== 11;
		eq[47][i] = IsEqual();
		eq[47][i].in[0] <== in[i];
		eq[47][i].in[1] <== 46;
		eq[48][i] = IsEqual();
		eq[48][i].in[0] <== in[i];
		eq[48][i].in[1] <== 95;
		eq[49][i] = IsEqual();
		eq[49][i].in[0] <== in[i];
		eq[49][i].in[1] <== 45;
		and[25][i] = AND();
		and[25][i].a <== states[i][14];
		multi_or[16][i] = MultiOR(6);
		multi_or[16][i].in[0] <== lt[18][i].out;
		multi_or[16][i].in[1] <== lt[19][i].out;
		multi_or[16][i].in[2] <== lt[20][i].out;
		multi_or[16][i].in[3] <== eq[47][i].out;
		multi_or[16][i].in[4] <== eq[48][i].out;
		multi_or[16][i].in[5] <== eq[49][i].out;
		and[25][i].b <== multi_or[16][i].out;
		multi_or[17][i] = MultiOR(2);
		multi_or[17][i].in[0] <== and[24][i].out;
		multi_or[17][i].in[1] <== and[25][i].out;
		states[i+1][14] <== multi_or[17][i].out;
		eq[50][i] = IsEqual();
		eq[50][i].in[0] <== in[i];
		eq[50][i].in[1] <== 64;
		and[26][i] = AND();
		and[26][i].a <== states[i][11];
		and[26][i].b <== eq[50][i].out;
		states[i+1][15] <== and[26][i].out;
		eq[51][i] = IsEqual();
		eq[51][i].in[0] <== in[i];
		eq[51][i].in[1] <== 13;
		and[27][i] = AND();
		and[27][i].a <== states[i][14];
		and[27][i].b <== eq[51][i].out;
		eq[52][i] = IsEqual();
		eq[52][i].in[0] <== in[i];
		eq[52][i].in[1] <== 13;
		and[28][i] = AND();
		and[28][i].a <== states[i][17];
		and[28][i].b <== eq[52][i].out;
		eq[53][i] = IsEqual();
		eq[53][i].in[0] <== in[i];
		eq[53][i].in[1] <== 13;
		and[29][i] = AND();
		and[29][i].a <== states[i][18];
		and[29][i].b <== eq[53][i].out;
		multi_or[18][i] = MultiOR(3);
		multi_or[18][i].in[0] <== and[27][i].out;
		multi_or[18][i].in[1] <== and[28][i].out;
		multi_or[18][i].in[2] <== and[29][i].out;
		states[i+1][16] <== multi_or[18][i].out;
		eq[54][i] = IsEqual();
		eq[54][i].in[0] <== in[i];
		eq[54][i].in[1] <== 62;
		and[30][i] = AND();
		and[30][i].a <== states[i][14];
		and[30][i].b <== eq[54][i].out;
		eq[55][i] = IsEqual();
		eq[55][i].in[0] <== in[i];
		eq[55][i].in[1] <== 62;
		and[31][i] = AND();
		and[31][i].a <== states[i][18];
		and[31][i].b <== eq[55][i].out;
		multi_or[19][i] = MultiOR(2);
		multi_or[19][i].in[0] <== and[30][i].out;
		multi_or[19][i].in[1] <== and[31][i].out;
		states[i+1][17] <== multi_or[19][i].out;
		lt[21][i] = LessThan(8);
		lt[21][i].in[0] <== in[i] - 65 - 10944121435919637611123202872628637544274182200208017171849102093287904247808;
		lt[21][i].in[1] <== 27;
		lt[22][i] = LessThan(8);
		lt[22][i].in[0] <== in[i] - 97 - 10944121435919637611123202872628637544274182200208017171849102093287904247808;
		lt[22][i].in[1] <== 27;
		lt[23][i] = LessThan(8);
		lt[23][i].in[0] <== in[i] - 48 - 10944121435919637611123202872628637544274182200208017171849102093287904247808;
		lt[23][i].in[1] <== 11;
		eq[56][i] = IsEqual();
		eq[56][i].in[0] <== in[i];
		eq[56][i].in[1] <== 46;
		eq[57][i] = IsEqual();
		eq[57][i].in[0] <== in[i];
		eq[57][i].in[1] <== 95;
		eq[58][i] = IsEqual();
		eq[58][i].in[0] <== in[i];
		eq[58][i].in[1] <== 45;
		and[32][i] = AND();
		and[32][i].a <== states[i][15];
		multi_or[20][i] = MultiOR(6);
		multi_or[20][i].in[0] <== lt[21][i].out;
		multi_or[20][i].in[1] <== lt[22][i].out;
		multi_or[20][i].in[2] <== lt[23][i].out;
		multi_or[20][i].in[3] <== eq[56][i].out;
		multi_or[20][i].in[4] <== eq[57][i].out;
		multi_or[20][i].in[5] <== eq[58][i].out;
		and[32][i].b <== multi_or[20][i].out;
		lt[24][i] = LessThan(8);
		lt[24][i].in[0] <== in[i] - 65 - 10944121435919637611123202872628637544274182200208017171849102093287904247808;
		lt[24][i].in[1] <== 27;
		lt[25][i] = LessThan(8);
		lt[25][i].in[0] <== in[i] - 97 - 10944121435919637611123202872628637544274182200208017171849102093287904247808;
		lt[25][i].in[1] <== 27;
		lt[26][i] = LessThan(8);
		lt[26][i].in[0] <== in[i] - 48 - 10944121435919637611123202872628637544274182200208017171849102093287904247808;
		lt[26][i].in[1] <== 11;
		eq[59][i] = IsEqual();
		eq[59][i].in[0] <== in[i];
		eq[59][i].in[1] <== 46;
		eq[60][i] = IsEqual();
		eq[60][i].in[0] <== in[i];
		eq[60][i].in[1] <== 95;
		eq[61][i] = IsEqual();
		eq[61][i].in[0] <== in[i];
		eq[61][i].in[1] <== 45;
		and[33][i] = AND();
		and[33][i].a <== states[i][18];
		multi_or[21][i] = MultiOR(6);
		multi_or[21][i].in[0] <== lt[24][i].out;
		multi_or[21][i].in[1] <== lt[25][i].out;
		multi_or[21][i].in[2] <== lt[26][i].out;
		multi_or[21][i].in[3] <== eq[59][i].out;
		multi_or[21][i].in[4] <== eq[60][i].out;
		multi_or[21][i].in[5] <== eq[61][i].out;
		and[33][i].b <== multi_or[21][i].out;
		multi_or[22][i] = MultiOR(2);
		multi_or[22][i].in[0] <== and[32][i].out;
		multi_or[22][i].in[1] <== and[33][i].out;
		states[i+1][18] <== multi_or[22][i].out;
		eq[62][i] = IsEqual();
		eq[62][i].in[0] <== in[i];
		eq[62][i].in[1] <== 10;
		and[34][i] = AND();
		and[34][i].a <== states[i][16];
		and[34][i].b <== eq[62][i].out;
		states[i+1][19] <== and[34][i].out;
	}
	
	signal final_state_sum[num_bytes+1];
	final_state_sum[0] <== states[0][19];
	for (var i = 1; i <= num_bytes; i++) {
		final_state_sum[i] <== final_state_sum[i-1] + states[i][19];
	}
	out <== final_state_sum[num_bytes];

    signal output reveal[num_bytes];
    for (var i = 0; i < num_bytes; i++) {
        reveal[i] <== in[i] * (states[i+1][18] + states[i+1][14]);
    }
}
